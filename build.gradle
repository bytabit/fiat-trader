buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/palantir/releases"
        }
    }
    dependencies {
        classpath 'com.palantir:gradle-gitsemver:0.6.0'
    }
}

apply plugin: 'scala'
apply plugin: 'gitsemver'
apply plugin: 'idea'

version semverVersion()

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets.main.scala.srcDirs = ["src/main/java", "src/main/scala"]
sourceSets.main.java.srcDirs = []

sourceSets.test.scala.srcDirs = ["src/test/java", "src/test/scala"]
sourceSets.test.java.srcDirs = []

sourceSets.main.resources {
    srcDirs = ['src/main/resources', 'src/main/java']
    exclude '**/*.java'
}

def scalaVersion = "2.11"
def akkaVersion = "2.4.1"
def akkaStreamVersion = "2.0.1"

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion.7"
    compile "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-persistence_$scalaVersion:$akkaVersion"
    compile "org.iq80.leveldb:leveldb:0.7"
    compile "org.fusesource.leveldbjni:leveldbjni-all:1.8"
    compile "com.typesafe.akka:akka-http-experimental_$scalaVersion:$akkaStreamVersion"
    compile "com.typesafe.akka:akka-http-spray-json-experimental_$scalaVersion:$akkaStreamVersion"
    compile "ch.qos.logback:logback-classic:1.0.13"
    compile "joda-time:joda-time:2.9.1"
    compile "org.joda:joda-convert:1.8"
    compile "org.joda:joda-money:0.10.0"
    compile "org.bitcoinj:bitcoinj-core:0.13.3"
    compile "com.madgag.spongycastle:prov:1.51.0.0"
    compile "net.glxn:qrgen:1.3"
    testCompile "org.scalatest:scalatest_$scalaVersion:2.2.1"
    testCompile "org.scalacheck:scalacheck_$scalaVersion:1.12.2"
}

task createVersionConf(dependsOn: processResources) << {
    def semver = semverVersion().toString()
    println "Create version.conf file, version = \"$semver\"."
    new File("$buildDir/resources/main/version.conf").withWriter { w ->
        w.write("bytabit.fiat-trader {\n  version = \"$semver\"\n}\n")
    }
}

compileScala {
    dependsOn createVersionConf
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'org.bytabit.ft.fxui.FiatTrader'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
    systemProperties System.properties
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

test {
    dependsOn spec
}
