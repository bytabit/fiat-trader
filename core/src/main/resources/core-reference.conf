bytabit.fiat-trader {
  configName = "testnet"
  version = "@VERSION@"
  filesDir = ${user.home}/.bytabit/fiat-trader

  wallet {
    net = "org.bitcoin.test"
    dir = ${bytabit.fiat-trader.filesDir}/${bytabit.fiat-trader.configName}/wallet
  }

  arbitrator {

    enabled = false

    bond-percent = 0.20
    btc-arbitrator-fee = 0.10
  }

  server {

    enabled = false

    local-address = "0.0.0.0"
    local-port = 9000
    local-protocol = "http"

    public-address = "localhost"
    public-port = 9000
    public-protocol = "http"
  }
}

akka {

  loggers = ["org.bytabit.ft.util.JavaLogger"]
  log-dead-letters-during-shutdown = false

  actor {

    dsl.inbox = 500

    serializers {
      clientManagerJson = "org.bytabit.ft.client.ClientManagerJsonSerializer"
      clientJson = "org.bytabit.ft.client.EventClientJsonSerializer"
      tradeJson = "org.bytabit.ft.trade.TradeJsonSerializer"
      arbitratorJson = "org.bytabit.ft.arbitrator.ArbitratorJsonSerializer"
    }

    serialization-bindings {
      "org.bytabit.ft.client.ClientManager$Event" = clientManagerJson
      "org.bytabit.ft.client.EventClient$Event" = clientJson
      "org.bytabit.ft.trade.TradeProcess$Event" = tradeJson
      "org.bytabit.ft.arbitrator.ArbitratorManager$Event" = arbitratorJson

      "java.io.Serializable" = none // because it is a bad default
    }

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
    }
  }

  persistence {
    //    snapshot-store {
    //      local.dir = ${bytabit.fiat-trader.filesDir}/${bytabit.fiat-trader.configName}/snapshots
    //      plugin = "akka.persistence.snapshot-store.local"
    //    }
    //
    //    journal {
    //      leveldb.dir = ${bytabit.fiat-trader.filesDir}/${bytabit.fiat-trader.configName}/journal
    //      plugin = "akka.persistence.journal.leveldb"
    //    }

    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }

    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }

  }
}

slick {
  driver = "slick.driver.H2Driver$"
  db {
    url1 = "jdbc:h2:"
    url2 = ";DATABASE_TO_UPPER=false;"
    //url = ${slick.db.url1}${bytabit.fiat-trader.filesDir}/${bytabit.fiat-trader.configName}${slick.db.url2}
    url = ${slick.db.url1}${bytabit.fiat-trader.filesDir}/${bytabit.fiat-trader.configName}/${bytabit.fiat-trader.configName}${slick.db.url2}
    user = "root"
    password = "root"
    driver = "org.h2.Driver"
    connectionTestQuery = "SELECT 1"
  }
}

jdbc-journal {
  slick = ${slick}
  slick.db.numThreads = 4
  slick.db.maxConnections = 2
  slick.db.minConnections = 1
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
  slick.db.numThreads = 4
  slick.db.maxConnections = 2
  slick.db.minConnections = 1
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  refresh-interval = "100ms"

  max-buffer-size = "500"

  slick = ${slick}
  slick.db.numThreads = 1
  slick.db.maxConnections = 1
  slick.db.minConnections = 1
}
