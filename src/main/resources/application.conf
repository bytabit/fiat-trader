include "version"

bytabit.fiat-trader {
  config = "default"

  wallet {
    net = "org.bitcoin.test"
    dir = ${user.home}/.bytabit/fiat-trader/${bytabit.fiat-trader.config}/wallet
  }

  arbitrator-server {

    enabled = false

    bond-percent = 0.20
    btc-arbitrator-fee = 0.10

    local-address = "0.0.0.0"
    local-port = 9000
    local-protocol = "http"

    public-address = "localhost"
    public-port = 9000
    public-protocol = "http"
  }
}

akka {

  loglevel = INFO

  actor {

    serializers {
      arbitratorServerMgrJson = "org.bytabit.ft.arbitrator.server.ArbitratorServerManagerJsonSerializer"
      arbitratorClientMgrJson = "org.bytabit.ft.arbitrator.ArbitratorClientManagerJsonSerializer"
      arbitratorFSMJson = "org.bytabit.ft.arbitrator.ArbitratorFSMJsonSerializer"
      tradeFSMJson = "org.bytabit.ft.trade.TradeFSMJsonSerializer"
    }

    serialization-bindings {
      "org.bytabit.ft.arbitrator.server.ArbitratorServerManager$Event" = arbitratorServerMgrJson
      "org.bytabit.ft.arbitrator.ArbitratorClientManager$Event" = arbitratorClientMgrJson
      "org.bytabit.ft.arbitrator.ArbitratorFSM$Event" = arbitratorFSMJson
      "org.bytabit.ft.trade.TradeFSM$Event" = tradeFSMJson

      "java.io.Serializable" = none // because it is a bad default
    }

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
    }
  }

  persistence {
    snapshot-store {
      local.dir = ${user.home}/.bytabit/fiat-trader/${bytabit.fiat-trader.config}/snapshots
      plugin = "akka.persistence.snapshot-store.local"
    }

    journal {
      leveldb.dir = ${user.home}/.bytabit/fiat-trader/${bytabit.fiat-trader.config}/journal
      plugin = "akka.persistence.journal.leveldb"
    }

    view {
      auto-update-interval = 2s
    }

  }
}
